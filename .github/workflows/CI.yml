name: CI

on:
  push:
    branches: [master, develop]
  pull_request:

env:
  OXC_LOG: 'debug'
  DEBUG: '@swc-node'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: stable - ${{ matrix.os }} - node@20
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: 'Install dependencies'
        run: pnpm install -r

      - name: Build TypeScript
        run: pnpm build

      - name: Test bindings
        run: |
          pnpm test
          pnpm test:jest
          pnpm test:module

  publish:
    name: Publish
    if: "startsWith(github.event.head_commit.message, 'chore(release): publish')"
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: npm-cache-ubuntu-latest-node@20

      - uses: pnpm/action-setup@v2

      - name: 'Install dependencies'
        run: pnpm install

      - name: Build TypeScript
        run: |
          pnpm build
          rm ./packages/**/*.tsbuildinfo

      - name: Lerna publish
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npx lerna publish from-package --no-verify-access --yes
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
